// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PFA__Project.Models;

#nullable disable

namespace PFA__Project.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240319235230_PFA_Projet")]
    partial class PFA_Projet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PFA__Project.Models.Artisan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.Property<int>("categorieId")
                        .HasColumnType("int");

                    b.Property<string>("cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nbrAnneExperience")
                        .HasColumnType("int");

                    b.Property<string>("numeroTele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photoCIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("prixService")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId")
                        .IsUnique();

                    b.HasIndex("categorieId");

                    b.ToTable("Artisans");
                });

            modelBuilder.Entity("PFA__Project.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescriptionCategorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomCategorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("PFA__Project.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId")
                        .IsUnique();

                    b.ToTable("clients");
                });

            modelBuilder.Entity("PFA__Project.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateNotification")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("PFA__Project.Models.RendezVous", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtisanId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRendezVous")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TauxService")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ArtisanId");

                    b.HasIndex("ClientId");

                    b.ToTable("rendezVous");
                });

            modelBuilder.Entity("PFA__Project.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("dateInscription")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("dateNaissance")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("utilisateurs");
                });

            modelBuilder.Entity("PFA__Project.Models.Artisan", b =>
                {
                    b.HasOne("PFA__Project.Models.Utilisateur", "Utilisateur")
                        .WithOne("artisan")
                        .HasForeignKey("PFA__Project.Models.Artisan", "UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFA__Project.Models.Categorie", "categorie")
                        .WithMany("artisans")
                        .HasForeignKey("categorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");

                    b.Navigation("categorie");
                });

            modelBuilder.Entity("PFA__Project.Models.Client", b =>
                {
                    b.HasOne("PFA__Project.Models.Utilisateur", "Utilisateur")
                        .WithOne("client")
                        .HasForeignKey("PFA__Project.Models.Client", "UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("PFA__Project.Models.Notification", b =>
                {
                    b.HasOne("PFA__Project.Models.Utilisateur", "utilisateur")
                        .WithMany("notifications")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("utilisateur");
                });

            modelBuilder.Entity("PFA__Project.Models.RendezVous", b =>
                {
                    b.HasOne("PFA__Project.Models.Artisan", "artisan")
                        .WithMany("rendezVous")
                        .HasForeignKey("ArtisanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFA__Project.Models.Client", "client")
                        .WithMany("rendezVous")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("artisan");

                    b.Navigation("client");
                });

            modelBuilder.Entity("PFA__Project.Models.Artisan", b =>
                {
                    b.Navigation("rendezVous");
                });

            modelBuilder.Entity("PFA__Project.Models.Categorie", b =>
                {
                    b.Navigation("artisans");
                });

            modelBuilder.Entity("PFA__Project.Models.Client", b =>
                {
                    b.Navigation("rendezVous");
                });

            modelBuilder.Entity("PFA__Project.Models.Utilisateur", b =>
                {
                    b.Navigation("artisan");

                    b.Navigation("client");

                    b.Navigation("notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
